
.. _program_listing_file__home_runner_work_codal-documentation_codal-documentation_libraries_codal-microbit-v2_inc_MicroBitCompass.h:

Program Listing for File MicroBitCompass.h
==========================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_codal-documentation_codal-documentation_libraries_codal-microbit-v2_inc_MicroBitCompass.h>` (``/home/runner/work/codal-documentation/codal-documentation/libraries/codal-microbit-v2/inc/MicroBitCompass.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
   The MIT License (MIT)
   
   Copyright (c) 2017 Lancaster University.
   
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:
   
   The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software.
   
   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
   */
   
   #ifndef MICROBIT_COMPASS
   #define MICROBIT_COMPASS
   
   #include "MicroBitConfig.h"
   #include "MicroBitComponent.h"
   #include "CoordinateSystem.h"
   #include "MicroBitAccelerometer.h"
   
   class MicroBitCompass : public Compass
   {
       public:
           static Compass*             driver;          // The instance of a MicroBitAcelerometer driver.
           MicroBitAccelerometer*      accelerometer;    // The accelerometer to use for tilt compensation.
   
           MicroBitCompass(MicroBitI2C &i2c, uint16_t id = MICROBIT_ID_COMPASS);
   
           static Compass& autoDetect(MicroBitI2C &i2c); 
   
           int heading();
   
           int getFieldStrength();
   
           int calibrate();
   
           void setCalibration(CompassCalibration calibration);
   
           CompassCalibration getCalibration();
   
           int isCalibrated();
   
           int isCalibrating();
   
           void clearCalibration();
   
   
           virtual int configure();
   
           void setAccelerometer(MicroBitAccelerometer &accelerometer);
   
           int setPeriod(int period);
   
           int getPeriod();
   
           int requestUpdate();
   
           int update();
   
           Sample3D getSample(CoordinateSystem coordinateSystem);
   
           Sample3D getSample();
   
           int getX();
   
           int getY();
   
           int getZ();
   
           void updateSample()
           {
               getSample();
           }
   
           ~MicroBitCompass();
   };
   
   //
   // Backward Compatibility
   //
   typedef Sample3D CompassSample;
   
   #endif
