
.. _program_listing_file__home_runner_work_codal-documentation_codal-documentation_libraries_codal-core_inc_drivers_MPU6050.h:

Program Listing for File MPU6050.h
==================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_codal-documentation_codal-documentation_libraries_codal-core_inc_drivers_MPU6050.h>` (``/home/runner/work/codal-documentation/codal-documentation/libraries/codal-core/inc/drivers/MPU6050.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef CODAL_MPU6050_H
   #define CODAL_MPU6050_H
   
   #include "CodalConfig.h"
   #include "CodalComponent.h"
   #include "CoordinateSystem.h"
   #include "I2C.h"
   #include "Accelerometer.h"
   #include "Gyroscope.h"
   
   #define MPU6050_DEFAULT_ADDR    0x68
   #define MPU6050_WHOAMI          0x75
   
   #define MPU6050_WHOAMI_VAL      0x34
   
   namespace codal{
   
       class MPU6050 : public Accelerometer
       {
           I2C& i2c;
           Pin             &int1;              // Data ready interrupt.
           uint16_t        address;            // I2C address of this accelerometer.
           int16_t         temp;
           Sample3D        gyro;             // The gyro value
   
       public:
   
           MPU6050(I2C &_i2c, Pin &_int1, CoordinateSpace &coordinateSpace, uint16_t address = MPU6050_DEFAULT_ADDR,  uint16_t id = DEVICE_ID_ACCELEROMETER);
   
           int whoAmI();
   
           virtual void idleCallback() override;
   
           virtual int configure() override;
   
           virtual int requestUpdate() override;
   
           virtual int setSleep(bool sleepMode);
       };
   
   }
   
   #endif
