
.. _program_listing_file__home_runner_work_codal-documentation_codal-documentation_libraries_codal-microbit-v2_inc_MicroBitDevice.h:

Program Listing for File MicroBitDevice.h
=========================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_codal-documentation_codal-documentation_libraries_codal-microbit-v2_inc_MicroBitDevice.h>` (``/home/runner/work/codal-documentation/codal-documentation/libraries/codal-microbit-v2/inc/MicroBitDevice.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
   The MIT License (MIT)
   
   Copyright (c) 2016 Lancaster University, UK.
   
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:
   
   The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software.
   
   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
   */
   
   #ifndef MICROBIT_DEVICE_H
   #define MICROBIT_DEVICE_H
   
   #include "codal-core/inc/types/Event.h"
   #include "CodalDevice.h"
   #include "MicroBitConfig.h"
   
   #define MICROBIT_NAME_LENGTH                    5
   #define MICROBIT_NAME_CODE_LETTERS              5
   
   namespace codal
   {
       class MicroBitDevice : public CodalDevice
       {
           public:
   
           MicroBitDevice();
   
          virtual void schedulerIdle();
   
          void seedRandom();
   
          virtual int seedRandom(uint32_t seed) override;
       };
   
       bool ble_running();
   
       uint32_t microbit_serial_number();
   
       char* microbit_friendly_name();
   
       void microbit_reset();
   
       const char * microbit_dal_version();
   
       void microbit_panic(int statusCode);
   
       void microbit_panic_timeout(int iterations);
   
       int microbit_random(int max);
   
       void microbit_seed_random();
   
       void microbit_seed_random(uint32_t seed);
   
       void microbit_reset();
   
   };
   
   extern codal::MicroBitDevice *microbit_device_instance;
   
   using namespace codal;
   
   #endif
