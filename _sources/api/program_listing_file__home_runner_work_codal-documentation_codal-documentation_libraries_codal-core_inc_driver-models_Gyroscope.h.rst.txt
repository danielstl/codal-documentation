
.. _program_listing_file__home_runner_work_codal-documentation_codal-documentation_libraries_codal-core_inc_driver-models_Gyroscope.h:

Program Listing for File Gyroscope.h
====================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_codal-documentation_codal-documentation_libraries_codal-core_inc_driver-models_Gyroscope.h>` (``/home/runner/work/codal-documentation/codal-documentation/libraries/codal-core/inc/driver-models/Gyroscope.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
   The MIT License (MIT)
   
   Copyright (c) 2017 Lancaster University.
   Copyright (c) 2018 Paul ADAM, Europe.
   
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:
   
   The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software.
   
   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
   */
   
   #ifndef CODAL_GYROSCOPE_H
   #define CODAL_GYROSCOPE_H
   
   #include "CodalConfig.h"
   #include "CodalComponent.h"
   #include "Pin.h"
   #include "CoordinateSystem.h"
   #include "CodalUtil.h"
   
   #define GYROSCOPE_IMU_DATA_VALID               0x02
   
   #define GYROSCOPE_EVT_DATA_UPDATE              1
   
   namespace codal
   {
   
       class Gyroscope : public CodalComponent
       {
           protected:
   
           uint16_t        samplePeriod;       // The time between samples, in milliseconds.
           uint8_t         sampleRange;        // The sample range of the gyroscope in g.
           Sample3D        sample;             // The last sample read, in the coordinate system specified by the coordinateSpace variable.
           Sample3D        sampleENU;          // The last sample read, in raw ENU format (stored in case requests are made for data in other coordinate spaces)
           CoordinateSpace &coordinateSpace;   // The coordinate space transform (if any) to apply to the raw data from the hardware.
   
           public:
   
           Gyroscope(CoordinateSpace &coordinateSpace, uint16_t id = DEVICE_ID_GYROSCOPE);
   
           virtual int setPeriod(int period);
   
           virtual int getPeriod();
   
           virtual int setRange(int range);
   
           virtual int getRange();
   
           virtual int configure();
   
           virtual int requestUpdate();
   
           virtual int update(Sample3D s);
   
           Sample3D getSample(CoordinateSystem coordinateSystem);
   
           Sample3D getSample();
   
           int getX();
   
           int getY();
   
           int getZ();
   
           ~Gyroscope();
   
           private:
   
           uint32_t instantaneousAccelerationSquared();
   
       };
   }
   
   #endif
