
.. _program_listing_file__home_runner_work_codal-documentation_codal-documentation_libraries_codal-microbit-v2_inc_FSCache.h:

Program Listing for File FSCache.h
==================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_codal-documentation_codal-documentation_libraries_codal-microbit-v2_inc_FSCache.h>` (``/home/runner/work/codal-documentation/codal-documentation/libraries/codal-microbit-v2/inc/FSCache.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
   The MIT License (MIT)
   Copyright (c) 2021 Lancaster University.
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:
   The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software.
   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
   */
   
   #ifndef FSCache_H
   #define FSCache_H
   
   #include "NVMController.h"
   #include "CodalCompat.h"
   
   #define FSCACHE_FLAG_PINNED             0x01
   
   #define CODAL_FS_CACHE_VALIDATE         1
   #define CODAL_FS_DEFAULT_CACHE_SZE      4
   
   namespace codal
   {
       struct CacheEntry
       {
           uint32_t address;
           uint16_t lastUsed;
           uint16_t flags;
           uint8_t  *page;
       };
   
       class FSCache
       {
           private:
               NVMController &flash;
               CacheEntry* cache;
               int blockSize;
               int cacheSize;
               uint16_t operationCount;
   
           public:
               FSCache(NVMController &nvm, int blockSize, int size = CODAL_FS_DEFAULT_CACHE_SZE);
   
               void clear();
   
               int erase(uint32_t address);
   
               int read(uint32_t address, const void *data, int len);
   
               int write(uint32_t address, const void *data, int len);
   
               int pin(uint32_t address);
   
               int unpin(uint32_t address);
   
               CacheEntry *getCacheEntry(uint32_t address);
   
               CacheEntry *cachePage(uint32_t address);
   
               void debug(bool verbose = true);
               void debug(CacheEntry *c, bool verbose = true);
       };
   }
   
   
   #endif
